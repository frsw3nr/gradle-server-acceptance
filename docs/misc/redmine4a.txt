Redmine4 調査
=============

* 有効なフィーチャーは #306 Full Text Search of files。4.1 で対応予定。
* 4.0移行環境でPlugInで内部エラー発生。

リファレンス調査
----------------

https://www.slideshare.net/g_maeda/redmine-4041

添付ファイル内のテキスト検索 #306
https://www.farend.co.jp/blog/2018/10/redmine-4/


アップグレード
--------------

* バックアップ
mysqldump -u root -p redmine > redmine.dmp
mv redmine redmine.bak

   create database redmine4 default character set utf8;
   grant all on redmine4.* to redmine4@localhost identified by 'password';
   grant all privileges on redmine.* to redmine4@"%" identified by 'password' with grant option;
   flush privileges;

mysql -u redmine4 -p redmine4 < redmine.dmp

* 本体
cd ~
wget https://www.redmine.org/releases/redmine-4.0.1.tar.gz
tar xvf redmine-4.0.1.tar.gz
ln -s redmine-4.0.1 redmine
cp redmine.bak/config/database.yml redmine/config/database.yml

cd redmine
bundle install --path vendor/bundle
bundle exec rake generate_secret_token
RAILS_ENV=production bundle exec rake db:migrate
sudo /etc/init.d/httpd restart

* プラグイン
cp -r ~/redmine.bak/plugins/redmine_getconfig ~/redmine/plugins
bundle install
RAILS_ENV=production bundle exec bin/rake redmine:plugins:migrate

デバイスメニューでエラー
NoMethodError (undefined method `page' for #<Array:0x007f3508a7f618>):
plugins/redmine_getconfig/app/controllers/device_inventory_controller.rb:31:in `index'

# binding.pry
    @rows = DeviceResult.where(
                node_id: nodes.ids, metric_id: @metric_id
            ).select(
                :node_id, :metric_id, :seq
            ).uniq.page(
                params[:page]
            )

http://ostrich:3000/inventory?node=ostrich

DeviceResult.where(
    node_id: nodes.ids, metric_id: @metric_id
).select(
    :node_id, :metric_id, :seq
).uniq.page(
    params[:page]
)

DeviceResult.where(node_id: nodes.ids, metric_id: @metric_id).select(:node_id, :metric_id, :seq).uniq()
.page(0)

arr=DeviceResult.where(node_id: nodes.ids, metric_id: @metric_id).select(:node_id, :metric_id, :seq).uniq()
arr.page がない
arr2=DeviceResult.where(node_id: nodes.ids, metric_id: @metric_id).select(:node_id, :metric_id, :seq)
arr2.page がない
arr3=DeviceResult.where(node_id: nodes.ids, metric_id: @metric_id)
arr3.page はある

DeviceResult.where(node_id: nodes.ids, metric_id: @metric_id).page(0).select(:node_id, :metric_id, :seq).uniq()

メソッドの呼び出し順序の調整が必要。要調査

戻し作業
--------

3.4最新の 3.4.8 に移行

wget http://www.redmine.org/releases/redmine-3.4.8.tar.gz
tar xvf redmine-3.4.8.tar.gz
mv redmine redmine.bak
ln -s redmine-3.4.8 redmine
cp redmine.bak/config/database.yml redmine/config/database.yml
cd redmine
bundle install --path vendor/bundle
bundle exec rake generate_secret_token
RAILS_ENV=production bundle exec rake db:migrate
sudo /etc/init.d/httpd restart
cp -r ~/redmine.bak/plugins/redmine_getconfig ~/redmine/plugins
bundle install
RAILS_ENV=production bundle exec bin/rake redmine:plugins:migrate
sudo /etc/init.d/httpd restart

モデル調査
-----------

プラットフォーム検索


@naopontan さんもおっしゃっていますが、  group_users テーブルに対して検索を行う方が早いと思います。

class UserGroup < ApplicationRecord # GroupUser が rails に取られてたので、これで代用
  self.table_name = 'group_users'
end

NodeConfig
  .select(:platform_id)
  .where(node: [user_a, user_b, user_c])
  .group(:group_id)
  .having('count(user_id) = 3')




Node.joins(:tenant).where('tenants.tenant_name like ? and node_name like ?',wildcard(@tenant),wildcard(@node))

Node.joins(:platforms, :tenant).where('tenants.tenant_name like ? and node_name like ?',wildcard(@tenant),wildcard(@node))
===> []

Node.joins(:platforms).where('node_name like ?',wildcard(@node))
===>
SELECT `nodes`.* FROM `nodes` INNER JOIN `node_configs` ON `node_configs`.`node_id` = `nodes`.`id` INNER JOIN `platforms` ON `platforms`.`id` = `node_configs`.`platform_id` WHERE (node_name like '%%%')

select distinct nodes.id, metrics.platform_id from nodes, test_results, metrics where nodes.id = test_results.node_id and metrics.id = test_results.metric_id;
===> 20行

select nodes.id, metrics.platform_id, metrics.metric_name from nodes, test_results, metrics where nodes.id = test_results.node_id and metrics.id = test_results.metric_id;
===> 599行

select nodes.id, metrics.platform_id, metrics.metric_name from nodes, test_results, metrics where nodes.id = test_results.node_id and metrics.id = test_results.metric_id and nodes.node_name like '%ostrich%';
===>
+----+-------------+---------------------+
| id | platform_id | metric_name         |
+----+-------------+---------------------+
|  3 |           3 | MemoryGB            |
|  3 |           3 | NumCpu              |
|  3 |           3 | PowerState          |

Node.joins(:metrics).where('node_name like ?',wildcard('ostrich'))

Metric.joins(:platform).where('platforms.platform_name like ? and device_flag = 1', wildcard('Linux'))
===> Linux プラットフォームのデバイスリスト

pp Metric.joins(:nodes).where('nodes.node_name like ? and device_flag = 1', wildcard('ostrich'))
===> ostrich ノードのデバイスリスト
===>
SELECT `metrics`.* FROM `metrics` INNER JOIN `device_results` ON `device_results`.`metric_id` = `metrics`.`id` INNER JOIN `nodes` ON `nodes`.`id` = `device_results`.`node_id` WHERE (nodes.node_name like '%router%' and device_flag = 1)

(device_resultsをジョイン)

pp Metric.joins(:nodes).where('nodes.node_name like ? and device_flag = 1', wildcard('eternus')).first

Employer.joins({:people => {:household => {:suburb => :city}}}) 
