Rails Getconfig 管理コンソール作成
==================================

スケルトン作成
モデル作成
コントローラ作成
ビュー作成

Railsインストール
-----------------

rbenv、Rubyのインストール
rbenvとそのプラグインruby-buildをインストールする。

git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
mkdir -p ~/.rbenv/plugins
git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

rbenv用の以下の設定を .bash_profile に設定する。

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

書き換えた .bash_profile の設定を読み込む。

source ~/.bash_profile

sudo -E yum install -y openssl-devel readline-devel zlib-devel

インストール可能なRubyのバージョンを調べる。

rbenv install -l

rbenv install 2.3.3
rbenv rehash
rbenv global 2.3.3

gem install bundler
rbenv rehash

gem update --system
gem install --no-ri --no-rdoc rails
gem install bundler

スケルトン作成
--------------

cd /home/psadmin/work/gradle/gradle-server-acceptance/docs/sample
mkdir getconfig_rails
cd getconfig_rails

bundle init

vi Gemfile
gem 'rails' コメントを外す

bundle install --path vendor/bundle --jobs=4
bundle exec rails new -B -d mysql --skip-turbolinks .

vi .gitignore
追加
/vendor/bundle

bundle 実行

bundle

https://github.com/voltrb/volt/issues/309

gem uninstall volt
gem install volt

Gemfile の以下コメントアウトを外して、 bundle update 実行

gem 'therubyracer', platforms: :ruby


DB 作成
-------

mysql -u root -p 
create database rails_getconfig_development3;

DB名とパスワード変更

vi config/database.yml

モデル作成
----------

# 引数は model名, カラム情報

# サイト,ノード,テナント
rails generate model tenant   tenant_name:string
rails generate model site     site_name:string
rails generate model node     tenant:references node_name:string ip:string 
rails generate model site_node site:references node:references

# プラットフォーム,アカウント,メトリック
rails generate model platform platform_name:string build:integer
rails generate model accounts node:references platform:references account_name:string \
user_name:string password:string
rails generate model metric platform:references metric_name:string level:integer device_flag:boolean

# テスト,テスト履歴
rails generate model verify_test test_name:string
rails generate model test_config  verify_test:references item_name:string value:string
rails generate model test_history verify_test:references metric:references verified:boolean

# ノード構成
rails generate model node_configs platform:references node:references test_name:string value:string

# テスト結果
rails generate model test_results node:references metric:references \
verify:boolean value:string
rails generate model device_results node:references metric:references \
seq:integer item_name:string value:string

rails db:migrate RAILS_ENV=development

rails g migration AddColumnToNode tenant:references

mysql -u root -p rails_getconfig_development2

grant all privileges on rails_getconfig_development2.* to redmine@"%" identified by 'getperf' with grant option;

insert into sites (id, site_name) select id, site_name from redmine.sites;
insert into tenants (id, tenant_name) select id, tenant_name from redmine.tenants;
insert into nodes (id, tenant_id, node_name) select id, tenant_id, node_name from redmine.nodes;
insert into platforms (id, platform_name) select id, domain_name from redmine.domains;
insert into metrics(id, platform_id, metric_name, device_flag) select id, domain_id, metric_name, device_flag from redmine.metrics;


./bin/rails console
@sites=Site.all
Site.where(site_name: 'GitDemoEnv')

site = Site.new(site_name: 'Test01')
site.persisted?  # => false 保存済みでない
site.save

Tenant.joins(:nodes)
@nodes=Node.all
Node.joins(:tenant).find_by(id: 1)
Node.includes(:tenant).find_by(id: 1)
@nodes=Node.eager_load(:tenant).select(:tenant.tenant_name, :node_name)

@nodes[0].tenant.tenant_name


多対多

@nodes=Node.eager_load(:sites).find_by(id: 1)
@nodes[0].sites[0].site_name

 @nodes=Node.eager_load(:sites).find_by(node_name: 'testgit001')

検査結果

Domain.all
metric=Metric.eager_load(:domain).find_by(metric_name: 'cpu')
Metric.eager_load(:domain).find_by(id:30).domain
Metric.eager_load(:domain).find_by(metric_name: "mem_free").domain

TestResult.eager_load(:metric,:domain,:node)
TestResult.find_by(:metric_id: 30)
TestResult.eager_load(:metric).find_by(metric_id: 30)

TestResult.find_by(metric_id: 30).node.tenant

デバイス付き検査結果

DeviceResult.all()
DeviceResult.find_by(metric_id: 90).metric

@devices=Node.find_by(node_name:'Jenkins').device_results
@devices[0].metric.metric_name
@devices[0].metric.domain.domain_name

コントローラ
------------

# controller
# 引数はplugin名, controller名, action名
bundle exec rails generate redmine_plugin_controller getconfig test_result index


@devices=Node.find_by(node_name:'Jenkins').device_results

/home/psadmin/work/gradle/redmine-3.2.5/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:274:in `require': cannot load such file -- 
/home/psadmin/work/gradle/redmine-3.2.5/plugins/redmine_getconfig/init.rb (LoadError)

検査結果

@results=Node.find_by(node_name:'Jenkins').test_results

@results[0].node.tenant.tenant_name
=> "_Default"

@results[0].metric.domain.domain_name
=> "Zabbix"

@results[0].metric.metric_name
=> "Host"

@results[0].value
=> "jenkins"

@results[0].verify
=> nil

デバイス付き検査結果

@devices=Node.find_by(node_name:'Jenkins').device_results

Node.find_by(node_name:'Jenkins').device_results.metric.metric_name

select distinct metric_name from node, device_result, metric where node.node_name='Jenkins'
and node.id = device_result.node_id and metric.id = device_result.metric_id;

User.select(:name).distinct

@devices=Node.select(:metric_id).find_by(node_name:'Jenkins').device_results

Node.find_by(node_name:'Jenkins').device_results.select(:metric_id)

Node.find_by(node_name:'Jenkins').device_results.joins(:metric)
Node.find_by(node_name:'Jenkins').device_results.select(:metic_id).eager_load(:metric).distinct

@device_metrics=Node.find_by(node_name:'Jenkins').device_results.select(:metric_id).distinct
@device_metrics[0].metric_id
=> 1
Metric.find_by(id: 1).metric_name
=> "Host"
Metric.find_by(id: 1).domain.domain_name
=> "Zabbix"

